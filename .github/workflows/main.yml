name: Deploy to main

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  packages: write # Needed to push to GitHub Container Registry
  id-token: write

jobs:

  # sonarqube-scan:
  #   name: Sonarqube-Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0 
  #     - uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  #     - uses: sonarsource/sonarqube-quality-gate-action@master
  #       timeout-minutes: 5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    name: Build
    # needs: sonarqube-scan
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build the Docker image
    - name: Build Docker image
      run: |
        PROJECT_NAME=$(basename ${{ github.repository }})
        docker build -f docker/live/web/Dockerfile -t ghcr.io/${{ github.repository_owner }}/${PROJECT_NAME}:main . 
      # docker build -t ghcr.io/${{ github.repository_owner }}/${PROJECT_NAME}:main .

    # Push the Docker image
    - name: Push Docker image
      run: |
        PROJECT_NAME=$(basename ${{ github.repository }})
        docker push ghcr.io/${{ github.repository_owner }}/${PROJECT_NAME}:main


  deploy-to-live:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build-and-push 
    steps:
      - name: Trigger Watchtower via Webhook
        run: |
            curl -X POST "http://165.22.54.114:8090/v1/update?container=esu-web" \
            -H "Authorization: Bearer wt_secret_4aP9tKx7rQm2"



  create-release:
    name: Release
    runs-on: ubuntu-latest
    needs: deploy-to-live

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Prevent using the default GITHUB_TOKEN

      - name: Get current date and time
        id: get_datetime
        run: echo "TAG_NAME=v$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Authenticate and push tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git tag $TAG_NAME
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git push origin $TAG_NAME

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Release ${{ env.TAG_NAME }}"
          body: "Automated release for Live Push ${{ github.sha }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}